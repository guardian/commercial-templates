@mixin separator($colour, $left, $margin-left: 0) {
    content: '';
    position: absolute;
    left: $left;
    top: 0;
    bottom: 0;
    margin-left: $margin-left;
    width: 1px;
    background: $colour;
}

.adverts {
    font-family: $f-serif-text;
    padding: 0 $gs-gutter / 2;
    position: relative;

    @include mq(tablet) {
        padding: 0 calc(50% - 370px);
    }

    @include mq(desktop) {
        padding: 0 calc(50% - 490px);
    }

    @include mq(leftCol) {
        padding: 0 calc(50% - 570px);
    }

    @include mq(wide) {
        padding: 0 calc(50% - 650px);
    }

    .inline-commercial {
        display: block;
    }

    .button {
        transition: border-color .1s, background-color .1s;
    }
}

.adverts--legacy {
    @include mq($until: tablet) {
        padding: 0;
    }

    @include mq(tablet, leftCol) {
        > .adverts__header {
            justify-content: space-between;
            align-items: center;
            flex-direction: row;
        }

        .adverts__kicker {
            margin-right: $gs-gutter;
        }

        .adverts__stamp {
            margin-left: auto;
        }
    }

    @include mq(leftCol) {
        display: flex;

        > .adverts__header {
            box-sizing: border-box;
            padding: $gs-baseline $gs-gutter / 5 * 2;
            // Extra 1px to line up with borders on sections above / below
            width: 160px + $gs-gutter / 2 + 1px;
        }

        > .adverts__body {
            flex: 1;
        }

        .has-no-flex & {
            display: table;

            &::before,
            &::after,
            > .adverts__body,
            > .adverts__header {
                display: table-cell;
                vertical-align: top;
            }
        }
    }

    @include mq(wide) {
        > .adverts__header {
            padding: $gs-baseline $gs-gutter;
            // Extra 1px to line up with borders on sections above / below
            width: 240px + $gs-gutter / 2 + 1px;
        }

        .adverts__ctas {
            margin-left: (-1 * $gs-gutter / 2);
            margin-right: (-1 * $gs-gutter / 2);
        }
    }

    > .adverts__header {
        .inline-logo-guardian {
          @include mq(leftCol) {
            display: none;
          }
        }

        @include mq($until: mobileLandscape) {
            padding: $gs-baseline / 2 $gs-gutter / 2;
        }

        @include mq(mobileLandscape, leftCol) {
            padding: $gs-baseline / 2 $gs-gutter;
        }
    }

    > .adverts__body {
        max-width: 100%;
        box-sizing: border-box;
        padding-bottom: $gs-baseline;

        @include mq(mobileLandscape) {
            box-sizing: border-box;
        }

        @include mq(leftCol) {
            margin-right: $gs-gutter / 2 + 1px;
        }

        @include mq(wide) {
            margin-right: $gs-gutter + 70px + 1px;
        }
    }

    .adverts__title {
        color: #ffffff;
        font: 900 18px/24px $f-serif-headline;
    }

    .adverts__logo {
        color: #ffffff;
        display: flex;

        @include mq($until: leftCol) {
            align-items: center;

            .icon--marque {
                margin-right: $gs-gutter / 2;
                width: 36px;
                height: 36px;
            }

            .icon--guardian {
                margin-right: $gs-gutter / 4;
            }
        }

        @include mq(leftCol) {
            flex-direction: column;

            /* http://alistapart.com/article/axiomatic-css-and-lobotomized-owls */
            > * + * {
                margin-top: $gs-baseline / 2;
            }
        }

        .icon {
            display: block;
            fill: #ffffff;
            max-width: 100%;
        }
    }

    .adverts__ctas {
        @include mq($until: tablet) {
            margin-top: $gs-baseline / 3;
        }

        .button {
            border-color: rgba(255, 255, 255, .3);

            &:hover,
            &:focus {
                border-color: rgba(255, 255, 255, 1);
            }
        }
    }

    .advert {
        position: relative;
    }

    /* [1] Forces text wrap in IE11 */
    .advert__title,
    .advert__standfirst,
    .advert__meta {
        max-width: 100%; /* [1] */
    }

    .adverts__row {
        padding: $gs-baseline $gs-gutter / 2;
        display: flex;

        > * {
            margin: 0 $gs-gutter / 2;

            /* In Firefox, flex items have a min-width: auto, which prevents
               them from shrinking when they have an image larger than the
               size the item would normally fill. The only workaround to
               solve this is to overwrite min-width on the flex item.
               Additionnally, we put a max-width constraint on the container
               otherwise it will overflow.
               See https://bugzilla.mozilla.org/show_bug.cgi?id=1139931 */
            min-width: 0;
            > .advert__image-container {
                max-width: 100%;
            }
        }

        @include mq($until: tablet) {
            > * {
                flex-basis: calc(50% - #{$gs-gutter});
            }

            > :nth-child(2) ~ * {
                margin-top: $gs-baseline;
            }

            > * + * {
                position: relative;

                &:nth-child(even)::before {
                    @include separator($neutral-4, $gs-gutter / -2);
                }
            }
        }

        @include mq(tablet) {
            > * + * {
                position: relative;

                &::before {
                    @include separator($neutral-4, $gs-gutter / -2);
                }
            }
        }

        @include mq(desktop) {
            padding-bottom: 0;

            .has-no-flex & {
                clear: both;
                max-width: 980px;

                > * {
                    float: left;
                    width: calc(25% - #{$gs-gutter});
                }

                > :only-child {
                    width: calc(100% - #{$gs-gutter});
                }

                > :first-child:nth-last-child(2),
                > :nth-child(2):last-child {
                    width: calc(50% - #{$gs-gutter});
                }
            }
        }


        @include mq(leftCol) {
            padding: $gs-baseline 0;
        }
    }

    .adverts__row--wrap {
        position: relative;
        padding-top: 0;
        flex-wrap: wrap;

        @include mq(mobileLandscape) {
            > *::before {
                content: none;
            }
        }
    }

    .adverts__row--single {
        align-items: flex-start;
    }

    .adverts__row--4cards > :nth-child(4) ~ *,
    .adverts__row--3cards > :nth-child(3) ~ *,
    .adverts__row--2cards > :nth-child(2) ~ * {
        display: none;
    }
}

.adverts--legacy-single {
    .advert {
        flex-basis: calc(100% - #{$gs-gutter});
    }

    @include mq(mobileLandscape) {
        .advert {
            flex-basis: calc(75% - #{$gs-gutter});
            flex-grow: 0;
        }

        .advert--inverse > .advert__image-container {
            flex-basis: calc(33.33% - #{$gs-gutter / 2});
            margin-right: 0;
        }

        .adverts__row > .advert::after {
            @include separator($neutral-4, 100%, $gs-gutter / 2);
        }

        .adverts__row > .button {
            flex-basis: auto;
            flex-grow: 1;
        }

        .adverts__row > .button::before {
            content: none;
        }
    }

    .has-no-flex & {
        .advert {
            width: calc(75% - #{$gs-gutter});
        }

        .advert--landscape > .advert__image-container {
            width: calc(33.33% - #{$gs-gutter / 2});
        }
    }
}

.adverts--legacy-inline {
    padding: 0;
    background: #eaeaea;

    > .adverts__header {
        @include mq($until: mobileLandscape) {
            padding: $gs-baseline / 2 $gs-gutter / 4;
        }

        padding: $gs-baseline / 2 $gs-gutter / 2;
    }

    .adverts__logo {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        color: #ffffff;
        fill: #ffffff;

        > .icon {
            margin-bottom: $gs-baseline / 2;
            height: auto;
            max-width: 100%;
        }
    }

    .adverts__title {
        font: 900 16px/22px $f-serif-headline;
    }

    .advert > :not(.advert__image-container) {
        @include mq($until: mobileLandscape) {
            margin-left: $gs-gutter / 4;
            margin-right: $gs-gutter / 4;
        }

        margin-left: $gs-gutter / 2;
        margin-right: $gs-gutter / 2;
    }

    .advert__image-container {
        height: auto;
    }

    .advert__image {
        width: 100%;
    }

    .has-no-flex & {
        .adverts__logo > * {
            display: block;
        }
    }
}

.adverts__header {
    display: flex;
    flex-direction: column;

    @include mq(tablet) {
        padding: 0 $gs-gutter;
    }
}

.adverts__kicker {
    .paidfor-meta__label {
        padding-left: 0;
    }
    .paidfor-label .popup__toggle {
        border: 0;
    }
}

.adverts__title {
    font-size: 24px;
    line-height: 28px;
    margin: 0;
}

.adverts__ctas,
.adverts__stamp {
    margin-top: auto;
}

.adverts__ctas {
    display: flex;
    flex-direction: column;

    /* http://alistapart.com/article/axiomatic-css-and-lobotomized-owls */
    > * + * {
        margin-top: $gs-baseline / 2;
    }
}

.adverts__ctas + .adverts__stamp {
    margin-top: 0;
}

.adverts__body {
    position: relative;
}

.adverts__row {
    @include mq($until: tablet) {
        /* http://alistapart.com/article/axiomatic-css-and-lobotomized-owls */
        > * + * {
            margin-top: $gs-baseline;
        }
    }

    @include mq(tablet) {
        display: flex;
        padding: $gs-baseline $gs-gutter / 2 0;

        > * {
            flex: 1;
        }
    }

}

.adverts__row--wrap {
    @include mq(tablet) {
        flex-wrap: wrap;
    }
}

.adverts__2cols {
    > * {
        flex-basis: calc(50% - #{$gs-gutter / 2});
    }

    > :nth-child(even) {
        margin-left: $gs-gutter;
    }

    > :nth-child(2) ~ * {
        margin-top: $gs-baseline;
    }

    .has-no-flex .adverts--legacy & {
        > * {
            float: left;
            width: calc(50% - #{$gs-gutter / 2});
        }

        > :nth-child(even) {
            margin-left: $gs-gutter - 5px;
        }

        > :nth-child(odd) {
            clear: left;
        }
    }
}

.adverts__3cols {
    > * {
        flex-basis: calc(33.33% - #{$gs-gutter});
    }

    > :nth-child(3) ~ * {
        margin-top: $gs-baseline;
    }

    .has-no-flex .adverts--legacy & {
        > * {
            float: left;
            width: calc(33.33% - #{$gs-gutter});
        }

        > :nth-child(3n+1) {
            clear: left;
        }
    }
}

@include mq(tablet) {
    .adverts__row--prominent-true > :nth-child(1) {
        flex-basis: calc(50% - #{$gs-gutter} - 1px);
        flex-grow: 0;

        .has-no-flex & {
            width: calc(50% - #{$gs-gutter} - 1px);
        }
    }
    .adverts__row--prominent-true > :nth-child(4) {
        display: none;
    }
}

.adverts__column {
    display: flex;
    flex-wrap: wrap;

    &:not(.adverts__2cols) {
        > * + * {
            margin-top: $gs-baseline;
        }
    }
}

.badge {
    font: normal 12px/16px $f-sans-serif-text;
    color: $neutral-2;
    font-weight: bold;
    margin-top: $gs-baseline / 2;
    padding-right: $gs-gutter;
    text-align: right;

    .adverts__more + & {
        margin-top: 0;
    }

    .has-no-flex & {
        clear: both;
    }
}

.badge--branded {
    margin-top: auto;
    margin-left: auto;
    padding: 0 $gs-gutter / 4;
}

.badge__logo {
    max-height: $gs-baseline * 5;
    margin-left: $gs-gutter / 2;
    vertical-align: middle;
}


/* Theming */
.adverts--legacy {
    background: #ededed;

    > .adverts__header .button {
        color: #000000;
    }

    .adverts__blurb {
        font: normal 14px/18px $f-serif-headline;
        color: #000000;
        background: #ffffff;
        box-decoration-break: clone;
        padding: 2px 5px 2px 2px;

        @include mq($until: leftCol) {
            display: none;
        }

        @include mq(leftCol) {
            font: normal 16px/22px $f-serif-headline;
        }
    }
    div.adverts_blurb {
      margin-top: 20px;
      margin-bottom: 20px;
    }
    .button {
        margin-right: 0;
    }

    .button--large {
        background: #ffffff;
        color: #000000;
    }
}
